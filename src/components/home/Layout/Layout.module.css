.layout {
  display: flex;
  flex-direction: row;
  width: 100%;
  height: 100vh;
}

.page {
  padding: 1rem;
  width: 100%;
  height: 100%;
}

.sidebar {
  position: absolute;
  left: 0;
  z-index: 1;
  height: 100%;
  display: flex;
  flex-direction: column;
  background-color: var(--background-light);
  min-width: 15rem;
  width: 15rem;
  padding: 0.5rem;
  transition-duration: var(--transition-duration);
}

.sidebarBlock {
  height: 100%;
  display: flex;
  width: 4rem;
  min-width: 4rem;
}

.closed {
  min-width: 4rem;
  width: 4rem;
}

@media (min-width: 850px) {
  .sidebar {
    position: relative;
  }

  .sidebarBlock {
    display: none;
  }
}

.closed .logo > h2 {
  display: none;
}

.closed .nav a {
  justify-content: center;
}

.closed .nav a > span {
  display: none;
}

.sidebarButton {
  background-color: var(--primary);
  position: absolute;
  right: 0;
  transform: translateX(50%);
  top: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 1.3rem;
  width: 1.3rem;
  border-radius: 50%;

  opacity: 0.75;
}

.sidebarButton:hover {
  opacity: 1;
}

.sidebarButton > svg {
  height: 0.9rem;
  width: 0.9rem;
}

.sidebarButton > svg > path {
  fill: #FFFFFF;
}

.logo {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  color: var(--primary)
}

.logo > span {
  padding: 0.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--primary);
  height: 3rem;
  aspect-ratio: 1;
  border-radius: var(--border-radius);
}

.logo svg {
  height: 100%;
}

.logo path {
  fill: #FFFFFF;
}

.nav {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  justify-content: space-between;
  flex-grow: 1;
}

.nav > div {
  display: flex;
  flex-direction: column;
  width: 100%;
  gap: 0.5rem;
}

.user {
  display: flex;
  gap: 0.5rem;
  width: 100%;
  text-align: left;
  font-size: 1rem;
}

.userInfo {
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.userImage {
  min-width: 3rem;
  width: 3rem;
  height: 3rem;
  border-radius: 50%;
  overflow: hidden;
  transition-duration: var(--transition-duration);
}

.userImage:hover {
  filter: brightness(0.85);
}

.userImage:active {
  filter: brightness(1);
}

.userImage > img {
  width: 100%;
  object-fit: cover;
}

.userName {
  font-weight: 500;
}

.userEmail {
  font-size: 0.889rem;
  color: var(--text-light);
  font-weight: 300;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.userPopup {
  position: absolute;
  bottom: 0.5rem;
  right: -0.75rem;
  transform: translateX(100%);
  background-color: var(--background-light);
  padding: 0.5rem;
  border-radius: var(--border-radius);
  overflow: visible;
  z-index: 1;
  display: flex;
  flex-direction: column;
  transition-duration: var(--transition-duration);
}

.userPopup::before {
  content: "";
  position:absolute;
  background-color: var(--background-light);
  transform: translateX(-50%) translateY(-50%) rotate(45deg);
  left: 0; 
  bottom: 1rem;
  height: 0.75rem;
  width: 0.75rem;
  z-index: 0;
  border-radius: 0 0 0 0.25rem;
}

.userPopup > a, .userPopup > button {
  font-size: 0.889rem;
  background: var(--background-light);
  color: var(--white);
  padding: 0.35rem 0.5rem;
  border-radius: var(--border-radius);
  transition-duration: 200ms;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  transition-duration: var(--transition-duration);
}

@media (max-width: 420px) {
  .userPopup {
    bottom: 4.5rem;
    right: auto;
    left: 0.5rem;
    transform: none;
    background-color: var(--background);
    outline: 1px solid var(--background-light);
  }

  .userPopup > a, .userPopup > button {
    background: var(--background);
  }

  .userPopup::before {
    left: 1.5rem;
    bottom: 0;
    transform: translateX(-50%) translateY(50%) rotate(-45deg);
    background-color: var(--background);
  }
}

.userPopup svg {
  min-height: 1rem;
  min-width: 1rem;
  height: 1rem;
  width: 1rem;
}

.userPopup path {
  fill: var(--foreground);
}

.userPopup > a:hover, .userPopup > button:hover {
  background-color: rgba(255,255,255,0.02);
}

.userPopupClosed {
  opacity: 0;
  pointer-events: none;
}